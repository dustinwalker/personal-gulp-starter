@charset "UTF-8";
* {
  box-sizing: border-box; }

@font-face {
  font-family: icons;
  src: url("../../assets/fonts/icons-8813534838.eot");
  src: url("../../assets/fonts/icons-8813534838.eot?#iefix") format("embedded-opentype"), url("../../assets/fonts/icons-8813534838.woff") format("woff"), url("../../assets/fonts/icons-8813534838.ttf") format("truetype"), url("../../assets/fonts/icons-8813534838.svg#icons") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  content: "";
  font-family: 'icons';
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  speak: none;
  text-transform: none; }

.icon.-facebook:before {
  content: "ÓÄÅ"; }

/*  DO NOT EDIT DIRECTLY: Automatically generated on Sun, 21 Jun 2015 00:13:53 GMT by svg-sprite. */
/*  DO NOT EDIT DIRECTLY: Automatically generated on Sun, 21 Jun 2015 00:13:53 GMT by svg-sprite. */
/*  DO NOT EDIT DIRECTLY: Automatically generated on Sun, 21 Jun 2015 00:13:53 GMT by svg-sprite. */
.testing-icon {
  display: inline-block;
  background-image: url("/assets/images/sprite-maps/testing-c7848c0474.svg");
  background-size: 15.6875em 14.875em; }

.lt-ie9 .testing-icon {
  background-image: url("/assets/images/sprite-maps/testing-f7c2f0c61c.png"); }

body {
  font-family: Helvetica, Arial, Sans-Serif;
  font-size: 1em; }

.testing-icon {
  width: 15.75em;
  height: 14.9375em;
  background-position: 0em 0em; }
  .lt-ie9 .testing-icon {
    width: 251px;
    height: 238px;
    background-position: 0px 0px; }

.notused {
  font-size: 1.3em; }

/*# sourceMappingURL=data:application/json;base64, */